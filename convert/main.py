from PIL import Image
import os

# –ê–±—Å–æ–ª—é—Ç–Ω—ã–µ –ø—É—Ç–∏ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π –ø—É—Ç—å)
INPUT_DIR = r"C:\Users\patsy\OneDrive\Documents\Project\Art_master\src\assets\dops"
OUTPUT_DIR = INPUT_DIR  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ç—É –∂–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
QUALITY = 80

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ PNG-—Ñ–∞–π–ª–æ–≤
files = [f for f in os.listdir(INPUT_DIR) if f.lower().endswith('.png')]

def convert_to_webp(input_path, output_path):
    try:
        with Image.open(input_path) as img:
            webp_path = os.path.splitext(input_path)[0] + ".webp"
            img.save(webp_path, "WEBP", quality=QUALITY, optimize=True)
            os.remove(input_path)  # –£–¥–∞–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π PNG
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ: {os.path.basename(input_path)}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {os.path.basename(input_path)} -> {str(e)}")
        return False

if __name__ == "__main__":
    print("üöÄ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è PNG -> WebP...")
    
    success = 0
    errors = 0
    
    for filename in files:
        input_path = os.path.join(INPUT_DIR, filename)
        
        if convert_to_webp(input_path, OUTPUT_DIR):
            success += 1
        else:
            errors += 1
    
    print(f"\nüéâ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
    print(f"–£—Å–ø–µ—à–Ω–æ: {success}")
    print(f"–û—à–∏–±–æ–∫: {errors}")
    print(f"–í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: {len(files)}")